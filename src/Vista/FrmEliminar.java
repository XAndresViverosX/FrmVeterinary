/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Modelo.MySQL;
import static Vista.FrmSpaMascotas.Alto;
import static Vista.FrmSpaMascotas.Ancho;
import java.awt.Color;
import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author ANDRES FELIPE VIVEROS ALBAN - S3AN
 */
public class FrmEliminar extends javax.swing.JInternalFrame {
private DefaultTableModel Modelo;
    int contador = 0;
    MySQL db = new MySQL();
    private static Connection Conexion;
    Color color,color1;
    /**
     * Creates new form FrmEliminar
     */
    public FrmEliminar() {
        setTitle("ELIMINAR");
        initComponents();
        
        FrmLogin usuariologin = new FrmLogin();
        lblUsuarioLogin.setText(usuariologin.usuario);
        lblfrm.setText(this.getTitle());
        lblName.setText("Usuario: ");
        lblName.setForeground(Color.black);
        lblFormulario.setText("Formulario Actual: ");
        lblFormulario.setForeground(Color.black);
        
        String Datos[][] = {};
        String Columnas[] = {"ID", "Nombre", "Apellido", "CC", "Genero", "FecNac", "TipoMasc", "NomMasc", "TiempMac", "CantVac", "Peso"};
        Modelo = new DefaultTableModel(Datos, Columnas);
        
        ImageIcon foto_0 = new ImageIcon(getClass().getResource("/img/return.png"));
        ImageIcon mitad_0 = new ImageIcon(foto_0.getImage().getScaledInstance(Ancho, Alto, Image.SCALE_DEFAULT));
        BtnSalir.setIcon(mitad_0);
        BtnSalir.setToolTipText("Click para volver al formulario de registro");
        BtnSalir.setText("Salir");
        
        ImageIcon foto_1 = new ImageIcon(getClass().getResource("/img/Trash.png"));
        ImageIcon mitad_1 = new ImageIcon(foto_1.getImage().getScaledInstance(Ancho, Alto, Image.SCALE_DEFAULT));
        BtnEliminar.setIcon(mitad_1);
        BtnEliminar.setToolTipText("");
        BtnEliminar.setText("Eliminar");
        
        color = new Color(192, 192, 192);
        txtID.setText("Ingrese ID del registro que desea eliminar");
        txtID.setForeground(color);
        lblTexto.setText("SISTEMA DE LA BASE DE DATOS");
        
        try {
            
            Class.forName("com.mysql.jdbc.Driver");
            Conexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/"+ "Spa_MascotasAV", "root","");
            Statement s = Conexion.createStatement();
            ResultSet rs = s.executeQuery("SELECT * FROM RegistrosUsu");
            
            //Bucle para cada resultado en la consulta
            while (rs.next()){
                //Se crea un array que sera una de las filas de la tabla
                Object [] fila = new Object[11]; // Hay tres columnas en la tabla
                
                //se rellena cada posicion del array con una de las columnas de la tabla de la base de datos
                for (int i = 0; i < 11; i++) {
                    fila [i] = rs.getObject(i + 1); // el primer indice en rs es el 1, no el cero.
                }
            // se añade el modelo de la fila completa
            Modelo.addRow(fila);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MySQL.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MySQL.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        TablaDatos.setModel(Modelo);
        //Reloj 
        DateTimeFormatter formateador = DateTimeFormatter.ofPattern("hh:mm:ss a");// se determina el fomato de la hora //Horas:Minutos:Segundos y tipo de hora PM o AM
        Runnable runnable = new Runnable() {
            @Override
            public void run() {
                while (true) {
                    try {
                        Thread.sleep(1000);// duerme durante 1000 milisegundos = 1 segundo y que de esta manera se este actualizando la hora
                        Reloj.setText(formateador.format(LocalDateTime.now())); //se pasa el texto [la hora] al jlabel = Reloj
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                }
            }
        };
        Thread hilo = new Thread(runnable);
        hilo.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BtnSalir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaDatos = new javax.swing.JTable();
        lblTexto = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        BtnEliminar = new javax.swing.JButton();
        PanelStatusBar5 = new javax.swing.JPanel();
        Linea5 = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        lblUsuarioLogin = new javax.swing.JLabel();
        lblFormulario = new javax.swing.JLabel();
        lblfrm = new javax.swing.JLabel();
        Reloj = new javax.swing.JLabel();

        BtnSalir.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        BtnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSalirActionPerformed(evt);
            }
        });

        TablaDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(TablaDatos);

        lblTexto.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblTexto.setText("jLabel1");

        txtID.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtID.setText("jTextField1");
        txtID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtIDFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIDFocusLost(evt);
            }
        });
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        BtnEliminar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        BtnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEliminarActionPerformed(evt);
            }
        });

        PanelStatusBar5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Linea5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        javax.swing.GroupLayout Linea5Layout = new javax.swing.GroupLayout(Linea5);
        Linea5.setLayout(Linea5Layout);
        Linea5Layout.setHorizontalGroup(
            Linea5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        Linea5Layout.setVerticalGroup(
            Linea5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        lblName.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblName.setText("jLabel1");

        lblUsuarioLogin.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblUsuarioLogin.setText("jLabel2");

        lblFormulario.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblFormulario.setText("jLabel1");

        lblfrm.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblfrm.setText("jLabel1");

        Reloj.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Reloj.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Reloj.setText("jLabel1");

        javax.swing.GroupLayout PanelStatusBar5Layout = new javax.swing.GroupLayout(PanelStatusBar5);
        PanelStatusBar5.setLayout(PanelStatusBar5Layout);
        PanelStatusBar5Layout.setHorizontalGroup(
            PanelStatusBar5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelStatusBar5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblUsuarioLogin)
                .addGap(72, 72, 72)
                .addComponent(Linea5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(lblFormulario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblfrm)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Reloj, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PanelStatusBar5Layout.setVerticalGroup(
            PanelStatusBar5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Linea5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelStatusBar5Layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(PanelStatusBar5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelStatusBar5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblName)
                        .addComponent(lblUsuarioLogin))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelStatusBar5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblFormulario)
                        .addComponent(lblfrm)
                        .addComponent(Reloj)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelStatusBar5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTexto)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 221, Short.MAX_VALUE)
                        .addComponent(BtnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BtnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTexto)
                        .addGap(18, 18, 18)
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(BtnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(PanelStatusBar5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSalirActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_BtnSalirActionPerformed

    private void txtIDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIDFocusGained
        if (txtID.getText().equals("Ingrese ID del registro que desea eliminar")) {
            txtID.setText("");
            txtID.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtIDFocusGained

    private void txtIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIDFocusLost
        if (txtID.getText().equals("")) {
            txtID.setText("Ingrese ID del registro que desea eliminar");
            txtID.setForeground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_txtIDFocusLost

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void BtnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEliminarActionPerformed
        String ID = txtID.getText();
        db.RecognizeDATABASE("root", "", "Spa_MascotasAV");
        try {
            String Query = "SELECT * FROM RegistrosUsu WHERE ID = '" + ID + "'";
            Statement st = Conexion.createStatement();
            ResultSet rs;
            rs = st.executeQuery(Query);
            if (rs.next()) {
                if (txtID.getText().equals("Ingrese ID del registro que desea eliminar o buscar") || txtID.getText().isEmpty()) {
                    ImageIcon foto_1 = new ImageIcon(getClass().getResource("/img/Error.png"));
                    ImageIcon mitad_1 = new ImageIcon(foto_1.getImage().getScaledInstance(Ancho, Alto, Image.SCALE_DEFAULT));
                    JOptionPane.showMessageDialog(null, "Hay campos vacios", "ERROR", JOptionPane.PLAIN_MESSAGE, mitad_1);
                } else {
                    ImageIcon icono = new ImageIcon(getClass().getResource("/img/Question.png"));
                    ImageIcon mitad_0 = new ImageIcon(icono.getImage().getScaledInstance(Ancho, Alto, Image.SCALE_DEFAULT));
                    int V = JOptionPane.showConfirmDialog(null, "Esta seguro que desea eliminar el registro con el ID: " + ID + " ?", "CONFIRMACIÓN", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, mitad_0);
                    if (V == JOptionPane.YES_OPTION) {
                        db.RecognizeDATABASE("root", "", "Spa_MascotasAV");
                        db.deleteRecord("RegistrosUsu", ID);
                        CargarTabla();
                        txtID.setText("Ingrese ID del registro que desea eliminar");
                        txtID.setForeground(color);
                    }
                }
            } else {
                ImageIcon foto_1 = new ImageIcon(getClass().getResource("/img/Error1.png"));
                ImageIcon mitad_1 = new ImageIcon(foto_1.getImage().getScaledInstance(Ancho, Alto, Image.SCALE_DEFAULT));
                JOptionPane.showMessageDialog(null, "El registro con la ID:" + ID + " No existe en la base de datos", "ERROR", JOptionPane.PLAIN_MESSAGE, mitad_1);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error en la busqueda de datos" + ex);
        }
    }//GEN-LAST:event_BtnEliminarActionPerformed

    public void CargarTabla(){
         Modelo.setRowCount(0);
         try {
            
            Class.forName("com.mysql.jdbc.Driver");
            Conexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/"+ "Spa_MascotasAV", "root","");
            Statement s = Conexion.createStatement();
            ResultSet rs = s.executeQuery("SELECT * FROM RegistrosUsu");
            
            //Bucle para cada resultado en la consulta
            while (rs.next()){
                //Se crea un array que sera una de las filas de la tabla
                Object [] fila = new Object[11]; // Hay tres columnas en la tabla
                
                //se rellena cada posicion del array con una de las columnas de la tabla de la base de datos
                for (int i = 0; i < 11; i++) {
                    fila [i] = rs.getObject(i + 1); // el primer indice en rs es el 1, no el cero.
                }
            // se añade el modelo de la fila completa
            Modelo.addRow(fila);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MySQL.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MySQL.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        TablaDatos.setModel(Modelo);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnEliminar;
    private javax.swing.JButton BtnSalir;
    private javax.swing.JPanel Linea5;
    private javax.swing.JPanel PanelStatusBar5;
    private javax.swing.JLabel Reloj;
    private javax.swing.JTable TablaDatos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFormulario;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblTexto;
    public static javax.swing.JLabel lblUsuarioLogin;
    private javax.swing.JLabel lblfrm;
    private javax.swing.JTextField txtID;
    // End of variables declaration//GEN-END:variables
}
