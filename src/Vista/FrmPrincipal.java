package Vista;

import Modelo.MySQL;
import static Vista.FrmSpaMascotas.Alto;
import static Vista.FrmSpaMascotas.Ancho;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author ANDRES FELIPE VIVEROS ALBAN - S3AN
 */
public class FrmPrincipal extends javax.swing.JFrame {
    MySQL db=new MySQL();
    public String NombreUsu;

    /**
     * Creates new form FrmPrincipal
     */
    public FrmPrincipal() {
        setExtendedState(MAXIMIZED_BOTH);
        setTitle("Sistema Principal");
        Image _Icono=Toolkit.getDefaultToolkit().getImage(getClass().getResource("/img/img_menu/Icono_opt.png"));
        setIconImage(_Icono);
        //Traer la variable usuario del FrmLogin aqui Y ponerlaen lblUsuarioLogin
        initComponents();
        FrmLogin UsuarioLogin = new FrmLogin();
        NombreUsu=(UsuarioLogin.usuario);
        MIRegistroEm.setEnabled(false);
        MIRegistroEm.setToolTipText("No podra acceder a esta opcion a menos que sea un usuario con privilegios");
        if(NombreUsu!=null){
        if(NombreUsu.compareTo("Administrador")==0){
        MIRegistroEm.setEnabled(true);
        MIRegistroEm.setToolTipText("Registar empleados");
        }}
        MIConectar.setEnabled(true);
        MIRegistro.setEnabled(false);
        OPCIONES.setEnabled(false);
        REPORTEJas.setEnabled(false);
        
        if(NombreUsu==null){
        MICerrarSesion.setEnabled(false);
        }else{
        MICerrarSesion.setEnabled(true);
        }
        if(OPCIONES.isEnabled()==false || REPORTEJas.isEnabled()==false){
        OPCIONES.setToolTipText("Menu inhabilido hasta conectarse a la base de datos");
        REPORTEJas.setToolTipText("Reporte inhabilitado hasta conectarse a la base de datos");
        }
        Registrar.setEnabled(false);
        
        String iCONO =("<html><img width='64'height'50'src =\""+getClass().getResource("/img/img_menu/JAVA.png")+"\"></html>\"\n Click para seleccionar este registro y modificar");//se busca la ubicacion de la imagen a mostrar junto con un tamaño
        AMCreador.setToolTipText(iCONO);//ToolTipText con una imagen
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        //ImageIcon icon = new ImageIcon(getClass().getResource("/img/Fondo4.png"));
        //Image image = icon.getImage();
        DPane = new javax.swing.JDesktopPane(){

            //   public void paintComponent(Graphics g){
                //        g.drawImage(image,0,0,getWidth(),getHeight(),this);
                //    }
        };
        menuBar = new javax.swing.JMenuBar();
        INICIO = new javax.swing.JMenu();
        MIConectar = new javax.swing.JMenuItem();
        Registrar = new javax.swing.JMenu();
        MIRegistroEm = new javax.swing.JMenuItem();
        MIRegistro = new javax.swing.JMenuItem();
        MICerrarSesion = new javax.swing.JMenuItem();
        MISalir = new javax.swing.JMenuItem();
        OPCIONES = new javax.swing.JMenu();
        MIConsultar = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        REPORTEJas = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        AMCreador = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        DPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        DPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        menuBar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        menuBar.setForeground(new java.awt.Color(255, 255, 255));

        INICIO.setMnemonic('I');
        INICIO.setText("INICIO");
        INICIO.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        MIConectar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ENTER, java.awt.event.InputEvent.CTRL_MASK));
        MIConectar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        MIConectar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/img_menu/BD_opt.png"))); // NOI18N
        MIConectar.setMnemonic('B');
        MIConectar.setText("Conectar a BD");
        MIConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIConectarActionPerformed(evt);
            }
        });
        INICIO.add(MIConectar);

        Registrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/img_menu/Registrar_opt.png"))); // NOI18N
        Registrar.setMnemonic('R');
        Registrar.setText("Registrar...");
        Registrar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        MIRegistroEm.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        MIRegistroEm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/img_menu/Empleados_opt.png"))); // NOI18N
        MIRegistroEm.setMnemonic('E');
        MIRegistroEm.setText("CRUD-Empleados");
        MIRegistroEm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIRegistroEmActionPerformed(evt);
            }
        });
        Registrar.add(MIRegistroEm);

        MIRegistro.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        MIRegistro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/img_menu/Nuevo_opt.png"))); // NOI18N
        MIRegistro.setMnemonic('R');
        MIRegistro.setText("Registro");
        MIRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIRegistroActionPerformed(evt);
            }
        });
        Registrar.add(MIRegistro);

        INICIO.add(Registrar);

        MICerrarSesion.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        MICerrarSesion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/img_menu/Logout_opt.png"))); // NOI18N
        MICerrarSesion.setMnemonic('C');
        MICerrarSesion.setText("Cerrar Sesion");
        MICerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MICerrarSesionActionPerformed(evt);
            }
        });
        INICIO.add(MICerrarSesion);

        MISalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        MISalir.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        MISalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/img_menu/Salir_opt.png"))); // NOI18N
        MISalir.setMnemonic('S');
        MISalir.setText("Salir");
        MISalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MISalirActionPerformed(evt);
            }
        });
        INICIO.add(MISalir);

        menuBar.add(INICIO);

        OPCIONES.setMnemonic('O');
        OPCIONES.setText("OPCIONES");
        OPCIONES.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        MIConsultar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        MIConsultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/img_menu/Buscar_opt.png"))); // NOI18N
        MIConsultar.setMnemonic('u');
        MIConsultar.setText("Buscar");
        MIConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIConsultarActionPerformed(evt);
            }
        });
        OPCIONES.add(MIConsultar);

        copyMenuItem.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        copyMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/img_menu/Actua_opt.png"))); // NOI18N
        copyMenuItem.setMnemonic('M');
        copyMenuItem.setText("Modificar");
        copyMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyMenuItemActionPerformed(evt);
            }
        });
        OPCIONES.add(copyMenuItem);

        pasteMenuItem.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        pasteMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/img_menu/Trash_opt.png"))); // NOI18N
        pasteMenuItem.setMnemonic('E');
        pasteMenuItem.setText("Eliminar");
        pasteMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasteMenuItemActionPerformed(evt);
            }
        });
        OPCIONES.add(pasteMenuItem);

        menuBar.add(OPCIONES);

        REPORTEJas.setText("REPORTE");
        REPORTEJas.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jMenuItem1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/img_menu/Reporte_opt.png"))); // NOI18N
        jMenuItem1.setText("JasperReport");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        REPORTEJas.add(jMenuItem1);

        menuBar.add(REPORTEJas);

        helpMenu.setMnemonic('A');
        helpMenu.setText("Acerca de");
        helpMenu.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        AMCreador.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_HOME, 0));
        AMCreador.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        AMCreador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/img_menu/Developer_opt.png"))); // NOI18N
        AMCreador.setMnemonic('d');
        AMCreador.setText("Creador");
        AMCreador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AMCreadorActionPerformed(evt);
            }
        });
        helpMenu.add(AMCreador);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DPane, javax.swing.GroupLayout.DEFAULT_SIZE, 611, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DPane, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MISalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MISalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_MISalirActionPerformed

    private void MIConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIConectarActionPerformed
        db.MySQLConnection("root", "", "");
        db.Verificar();
        JOptionPane.showMessageDialog(null, db.existe);
        if (db.existe == 1) {
            JOptionPane.showMessageDialog(this, "Encontrada!! Existe!!" + "\n" + db.existe, "ADVERTENCIA", JOptionPane.INFORMATION_MESSAGE);
            db.MySQLConnection("root", "", "");
            MIConectar.setEnabled(false);
            ImageIcon icono = new ImageIcon(getClass().getResource("/img/Check.png"));
            ImageIcon mitad_0 = new ImageIcon(icono.getImage().getScaledInstance(Ancho, Alto, Image.SCALE_DEFAULT));
            JOptionPane.showMessageDialog(null, "Se ha accedido a la base de datos satisfactoriamente!", "CONFIRMACIÓN",JOptionPane.PLAIN_MESSAGE, mitad_0);
            MIRegistro.setEnabled(true);
            OPCIONES.setEnabled(true);
            REPORTEJas.setEnabled(true);
            Registrar.setEnabled(true);
            OPCIONES.setToolTipText("Menu para consultas");
            REPORTEJas.setToolTipText("Reporte");
        }
        if (db.existe == 0) {
            JOptionPane.showMessageDialog(this, "No Encontrada!! No Existe!!" + "\n" + db.existe, "ADVERTENCIA", JOptionPane.INFORMATION_MESSAGE);
            db.createDB("Spa_MascotasAV");
            db.createTable("RegistrosUsu");
            db.createTable1("Registros_Emp");
            MIConectar.setEnabled(false);
            MIRegistro.setEnabled(true);
            OPCIONES.setEnabled(true);
            REPORTEJas.setEnabled(true);
            Registrar.setEnabled(true);
            OPCIONES.setToolTipText("Menu para consultas");
            REPORTEJas.setToolTipText("Reporte");
        }
    }//GEN-LAST:event_MIConectarActionPerformed

    private void MIRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIRegistroActionPerformed
            FrmSpaMascotas SpaMascotas = new FrmSpaMascotas();
            Dimension pantalla = Toolkit.getDefaultToolkit().getScreenSize();
            //obtenemos el tamaño de la ventana
            Dimension ventana = SpaMascotas.getSize();
            //para centrar la ventana lo hacemos con el siguiente calculo
            SpaMascotas.setLocation((pantalla.width - ventana.width)/2, (pantalla.height - ventana.height)/2);
            DPane.add(SpaMascotas);
            SpaMascotas.setVisible(true);

    }//GEN-LAST:event_MIRegistroActionPerformed

    private void MIConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIConsultarActionPerformed
        FrmSearch Read = new FrmSearch();
        Dimension pantalla = Toolkit.getDefaultToolkit().getScreenSize();
        //obtenemos el tamaño de la ventana
        Dimension ventana = Read.getSize();
        //para centrar la ventana lo hacemos con el siguiente calculo
        Read.setLocation((pantalla.width - ventana.width) / 2, (pantalla.height - ventana.height) / 2);
        DPane.add(Read);
        Read.setVisible(true);
    }//GEN-LAST:event_MIConsultarActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection Cnxy = DriverManager.getConnection("jdbc:mysql://localhost:3306/" + "Spa_MascotasAV", "root", "");

        JasperReport reporte = null;
        String path ="src\\ReporteSpa\\ReporteRMasc.jasper";
        
        reporte = (JasperReport)JRLoader.loadObjectFromFile(path);
        JasperPrint jprint = JasperFillManager.fillReport(reporte, null,Cnxy);
        JasperViewer view = new JasperViewer(jprint, false);
        
        view.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        
        view.setVisible(true);
        
        view.setTitle("Reporte Spa_Mascotas");
        
        Image _Icono=Toolkit.getDefaultToolkit().getImage(getClass().getResource("/img/ReporteSpa1.png"));
        view.setIconImage(_Icono);
        
    } catch (JRException ex) {
        Logger.getLogger(FrmSpaMascotas.class.getName()).log(Level.SEVERE, null, ex);
    } catch (SQLException ex) {
        Logger.getLogger(FrmSpaMascotas.class.getName()).log(Level.SEVERE, null, ex);
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(FrmSpaMascotas.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void copyMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyMenuItemActionPerformed
        FrmModificar Update = new FrmModificar();
        Dimension pantalla = Toolkit.getDefaultToolkit().getScreenSize();
        //obtenemos el tamaño de la ventana
        Dimension ventana = Update.getSize();
        //para centrar la ventana lo hacemos con el siguiente calculo
        Update.setLocation((pantalla.width - ventana.width) / 2, (pantalla.height - ventana.height) / 2);
        DPane.add(Update);
        Update.setVisible(true);
    }//GEN-LAST:event_copyMenuItemActionPerformed

    private void pasteMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasteMenuItemActionPerformed
        FrmEliminar Delete = new FrmEliminar();
        Dimension pantalla = Toolkit.getDefaultToolkit().getScreenSize();
        //obtenemos el tamaño de la ventana
        Dimension ventana = Delete.getSize();
        //para centrar la ventana lo hacemos con el siguiente calculo
        Delete.setLocation((pantalla.width - ventana.width) / 2, (pantalla.height - ventana.height) / 2);
        DPane.add(Delete);
        Delete.setVisible(true);
    }//GEN-LAST:event_pasteMenuItemActionPerformed

    private void MICerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MICerrarSesionActionPerformed
        ImageIcon icono = new ImageIcon(getClass().getResource("/img/Question.png"));
        ImageIcon mitad_0 = new ImageIcon(icono.getImage().getScaledInstance(Ancho, Alto, Image.SCALE_DEFAULT));
        int V = JOptionPane.showConfirmDialog(rootPane, "Desea cerrar la sesion de : "+ NombreUsu + "\n¿Es correcto?: ","AVISO",JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE, mitad_0);
        if (V == JOptionPane.YES_OPTION) {
            FrmLogin Login = new FrmLogin();
            Login.setVisible(true);
            this.setVisible(false);
        }
    }//GEN-LAST:event_MICerrarSesionActionPerformed

    private void AMCreadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AMCreadorActionPerformed
        FrmCreador debut = new FrmCreador();
        Dimension pantalla = Toolkit.getDefaultToolkit().getScreenSize();
        //obtenemos el tamaño de la ventana
        Dimension ventana = debut.getSize();
        //para centrar la ventana lo hacemos con el siguiente calculo
        debut.setLocation((pantalla.width - ventana.width) / 2, (pantalla.height - ventana.height) / 2);
        debut.setVisible(true);
        DPane.add(debut);
    }//GEN-LAST:event_AMCreadorActionPerformed

    private void MIRegistroEmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIRegistroEmActionPerformed
        FrmRegistroEmp Empleados=new FrmRegistroEmp();
        Dimension pantalla = Toolkit.getDefaultToolkit().getScreenSize();
        //obtenemos el tamaño de la ventana
        Dimension ventana = Empleados.getSize();
        //para centrar la ventana lo hacemos con el siguiente calculo
        Empleados.setLocation((pantalla.width - ventana.width) / 2, (pantalla.height - ventana.height) / 2);
        Empleados.setVisible(true);
        DPane.add(Empleados);
    }//GEN-LAST:event_MIRegistroEmActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AMCreador;
    private javax.swing.JDesktopPane DPane;
    private javax.swing.JMenu INICIO;
    private javax.swing.JMenuItem MICerrarSesion;
    private javax.swing.JMenuItem MIConectar;
    private javax.swing.JMenuItem MIConsultar;
    private javax.swing.JMenuItem MIRegistro;
    private javax.swing.JMenuItem MIRegistroEm;
    private javax.swing.JMenuItem MISalir;
    private javax.swing.JMenu OPCIONES;
    private javax.swing.JMenu REPORTEJas;
    private javax.swing.JMenu Registrar;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem pasteMenuItem;
    // End of variables declaration//GEN-END:variables

}
